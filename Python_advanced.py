- Установить виртуальное окружение: python -m venv venv
- Запустить окружение: venv\scripts\activate
- Установить библиотеку реквестс: pip install requests
- Проверить что установлено в окружении: pip freeze
- Установить Flask: pip install flask
- Перейти в папку с приложением и выполнить ряд команд:
    1) setx FLASK_APP "app.py"
    2) setx FLASK_DEBUG 1
    3) python -m flask run --port=5555
После можно переходить по ссылке: http://127.0.0.1:5555/test
========================================================================================================================

Разбираемся, как это работает:
 - app=Flask(__name__) # подключаем к приложению flask
 - @app.route('/test') # это эндпоинт(находится в файле app.py), в аргументе функции как раз находится адрес страницы
 - def test_function(): # Как раз возвражает страницу по указанному эндпоинту
    now = datetime.datetime.now().utcnow()
    return f'Это тестовая страничка, ответ сгенерирован в {now}'
========================================================================================================================

 - Коды ответов - https://developer.mozilla.org/en-US/docs/Web/HTTP/Status (документация)
1xx - Информационные коды
2хх - Сообщения об успешном принятии запроса и обработки
3хх - Эти коды сообщшают, что для умпешного завершения операции нужно выполнить другой запрос (по другому url)
4хх - Коды ошибок со стороны клиента
5хх - Коды необработанных исключений со стороны сервера
========================================================================================================================

__________________________________________Полезные функции______________________________________________________________

Точное время через час:
# import datetime
#
# def time_future():
#     now = datetime.datetime.now()
#     future = datetime.timedelta(hours=+1)
#     current_time_after_hour = now + future
#     return f'«Точное время через час будет {current_time_after_hour.__format__("%H:%M:%S")}»'

Поиск и сбор целых слов в текством файле (без знаков припинания и пробелов, нужно вбить путь к файлу):
# import re
# import os
#
# def get_word():
#     data = []
#     base_dir = os.path.dirname(os.path.abspath(__file__))
#     book_file = os.path.join(base_dir, 'war_and_peace.txt')
#     word = re.compile(r'\w*[^.,()!:;"\d\s\-]')
#     with open(book_file, 'r', encoding='utf-8') as file:
#         for i in file:
#             result = re.findall(word, i.strip())
#             data.extend(result)
#     return data

Возврат элементов списка через запятую в виде строки (без скобок [])
# def cars():
#     car_list = ['Chevrolet', 'Renault', 'Ford', 'Lada']
#     return f'Список машин: {", ".join(map(str,[x for x in car_list]))}'
========================================================================================================================

_______________________________________________________LINUX____________________________________________________________
 - date +"%Y-%m-%d" - вывести дату в формате: год - месяц - день.
 - man - Команда в терминале для предоставления внутренней документацпи по системе (сокращение от manual)
 - pwd - Команда показывает рабочую диррикторию (print working dirrectory)
 - ls - Команда показывает список файлов в рабочей дирректории (где мы сейчас находимся).
 - sudo - Нужна для запроса прав у системы (например для установки приложений. В тком случае пишется sudo перед командой)
    можно передать аргументы
    . - одна точка означает текущую папку
    ..- две точки папку на уровень выше текущей папки

    для примера:
    ls ./Downloads/
    ls ./././././Downloads/
    ls ../user/Downloads
    Будет означать одну и ту же папку

 - cd - Команада меняет дирректорию
 - sudo apt install python3-virtualenv - устаноить виртуальное окружение для питона
 - sudo pytho3 -m virtualenv -p python3 venv - создать виртуальное окружение
 - source venv/bin/activate - запустить виртуальное окружение
 - sudo snap install pycharm-professional --classic - Установим Pycharm
